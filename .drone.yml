---
kind: pipeline
type: docker
name: default


steps:
  - name: restore-npm-cache
    image: plugins/s3-cache
    pull: if-not-exists
    failure: ignore
    settings:
      pull: true
      path: cache
      filename: project-books-npm.tar
      endpoint: http://s3-minio.gitlab.svc.cluster.local:9000
      workdir: node_modules
      access_key:
        from_secret: S3AccessKey
      secret_key:
        from_secret: S3SecretKey
      restore: true

  - name: build
    image: node:18.14.2-slim
    pull: if-not-exists
    commands:
      - npm ci
      - npm run build

  - name: rebuild-npm-cache
    image: plugins/s3-cache
    pull: if-not-exists
    failure: ignore
    settings:
      rebuild: true
      path: cache
      filename: project-books-npm.tar
      endpoint: http://s3-minio.gitlab.svc.cluster.local:9000
      workdir: node_modules
      mount: node_modules
      access_key:
        from_secret: S3AccessKey
      secret_key:
        from_secret: S3SecretKey

  - name: build-image
    image: docker:17
    when:
      branch:
        - master
    pull: if-not-exists
    environment:
      DOCKER_HOST: tcp://drone-docker.droneci.svc.cluster.local:2375
      DOCKER_TLS_CERTDIR: ""
    commands:
      - docker image build -f Dockerfile -t registry-http.registry.svc.cluster.local/library-frontend:${CI_COMMIT_SHA} .
      - docker push registry-http.registry.svc.cluster.local/library-frontend:${CI_COMMIT_SHA}

  - name: deploy
    image: bitnami/kubectl:1.24
    pull: if-not-exists
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request
    environment:
      K8S_TOKEN:
        from_secret: k8sToken
    commands:
      - kubectl config set-cluster "k8s.mikhailov.net" --server=https://192.168.0.5:6443  --insecure-skip-tls-verify
      - kubectl config set-credentials user --token=$K8S_TOKEN
      - kubectl config set-context "local" --cluster="k8s.mikhailov.net" --user="user"
      - kubectl config use-context "local"
      - kubectl config set-context --current --namespace=library
      - kubectl set image deployment/library-frontend library-frontend=registry.mikhailov.net/library-frontend:${CI_COMMIT_SHA}

trigger:
  event:
    exclude:
      - promote

---
kind: pipeline
type: docker
name: deploy

steps:
  - name: deploy
    image: bitnami/kubectl:1.24
    pull: if-not-exists
    when:
      branch:
        - master
    environment:
      K8S_TOKEN:
        from_secret: k8sToken
    commands:
      - kubectl config set-cluster "k8s.mikhailov.net" --server=https://192.168.0.5:6443  --insecure-skip-tls-verify
      - kubectl config set-credentials user --token=$K8S_TOKEN
      - kubectl config set-context "local" --cluster="k8s.mikhailov.net" --user="user"
      - kubectl config use-context "local"
      - kubectl config set-context --current --namespace=library
      - kubectl set image deployment/library-frontend library-frontend=registry.mikhailov.net/library-frontend:${CI_COMMIT_SHA}
trigger:
  event:
    - promote
  target:
    - production



